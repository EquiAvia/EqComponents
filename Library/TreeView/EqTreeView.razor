@typeparam TValue
@using equiavia.components.Utilities

@if (_treeItems != null)
{
    <CascadingValue TValue="EqTreeView<TValue>" Value="@this">
        <div class="treeview-container" style="max-height:@Height;">
            <ul class="noselect">
                @foreach (var item in _treeItems.Where(i => i.IsRootNode && i.IsVisible).Take(MaxNumOfRootNodesToDisplay).ToList())
                {
                    <EqTreeViewItem TValue=@TValue
                                    @ref="@item.eqTreeViewItem"
                                    Item="@item"
                                    KeyPropertyName="@KeyPropertyName"
                                    ValuePropertyName="@ValuePropertyName"
                                    @key="item.UniqueIdentifier"
                                    OnItemSelected="ItemSelected"
                                    OnItemDoubleClicked="ItemDoubleClicked"
                                    OnItemRightClicked="ItemRightClicked"
                                    SelectedCSSClass="@SelectedCSSClass"
                                    ItemCSSClass="@ItemCSSClass"
                                    ItemTemplate="@ItemTemplate"
                                    CompactView="@CompactView"></EqTreeViewItem>
                }
            </ul>
            @if (NoRecordsFoundTemplate!=null && !_treeItems.Where(i => i.IsVisible == true).Any())
            {
                @NoRecordsFoundTemplate
            }
        </div>
    </CascadingValue>
}

@code {

}
